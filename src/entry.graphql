scalar JSON
scalar DateTime

interface INode {
	#  Generated id for a user. read-only
  _id: ID!
  #  A unique identifier for the object.
  _key: ID!
  #  A unique identifier for the object.
  _rev: ID!

  # Date and time the object was created
  createdAt: DateTime!
  # Date and time the object was created
  updatedAt: DateTime!
}

interface IEntity {
  # Generated id for a user. read-only
  _id: ID!
  #  A unique identifier for the object.
  _key: ID!
  #  A unique identifier for the object.
  _rev: ID!

  # Date and time the object was created
  createdAt: DateTime!
  # Date and time the object was created
  updatedAt: DateTime!
	# Username names
	username: String!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Price {
	basePrice: Float!
	currency: CurrencyInput!
	currentPrice: Float!
}

enum CurrencyInput {
  NA
  USD
  EU
  PD
  AUD
}

type ProductAnalytics {
	relevance: Float
	views: Int!
	totalProducts: Int
	totalProductsSold: Int
	totalCustomersRetained: Int
	
	# Sales & Profit
	currentMonthSales: Int
	previousMonthSales: Int
	previousMonthProfit: Float
	currentMonthProfit: Float

}

type BusinessAnalytics {
	relevance: Float
	views: Int!
	totalProducts: Int
	totalProductsSold: Int
	totalCustomersRetained: Int
	
	# Sales & Profit
	currentMonthSales: Int
	previousMonthSales: Int
	previousMonthProfit: Float
	currentMonthProfit: Float

}